# FILE IS AUTOMATICALLY MANAGED BY github.com/vegaprotocol/terraform//github
name: "Continous Delivery Workflow"
"on":
  push:
    tags:
      - v*
jobs:
  integration:
    uses: ./.github/workflows/continous-integration.yml

  release-docker:
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{!github.event.repository.private}}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.0"

      - name: build
        run: |
          make build

      # private registry build
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.sha }},ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      # public registry builds
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{!github.event.repository.private}}
        with:
          context: .
          push: true
          tags: ${{ github.repository }}:latest,${{ github.repository }}:${{ github.sha }},${{ github.repository }}:${{ github.ref_name }}

  release-binary:
    needs: integration
    name: Release on ${{ matrix.os }} with Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go:
          - '1.18.0'
        os:
          - macos-latest
          - windows-latest
          - ubuntu-latest
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: make deps

      - name: Build
        env:
          RELEASE_VERSION: ${{ github.ref_name }}
        run: make release-${{ matrix.os }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
